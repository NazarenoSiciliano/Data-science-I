{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "mount_file_id": "1l2mfVH0ejfrXrp2cY38SbZkEc8DIVjDe",
      "authorship_tag": "ABX9TyN3RafqlYORTL04yQVYFhtY",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/NazarenoSiciliano/Data-science-I/blob/main/ProyectoDS_ParteI_Siciliano\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Proyecto Final - Visualizaciones en Python\n",
        "# Casos dengue en CABA\n",
        "Primer entrega"
      ],
      "metadata": {
        "id": "iK2tVObhRF8Z"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 📌 Abstract\n",
        "Este proyecto utiliza un conjunto de datos sobre casos de dengue en la Ciudad Autónoma de Buenos Aires (CABA), extraído de fuentes oficiales del gobierno de la Ciudad, cubriendo el período de 2024 a 2025. La base de datos contiene información detallada sobre la incidencia de la enfermedad, incluyendo datos demográficos de los pacientes, ubicación geográfica de los casos (comuna, barrio), fecha de diagnóstico, y variables clínicas y epidemiológicas relevantes.\n",
        "\n",
        "El objetivo del proyecto es realizar un análisis exploratorio de los casos de dengue para identificar patrones, tendencias y factores de riesgo. Buscamos responder a preguntas clave como la evolución temporal de los casos, la distribución geográfica de los brotes y la segmentación de la población afectada por edad y género. Para ello, se aplican técnicas de análisis descriptivo y visualización de datos, utilizando librerías de Python como Pandas, Matplotlib y Seaborn.\n",
        "\n",
        "El trabajo comienza con una etapa de limpieza y preprocesamiento de los datos, incluyendo la gestión de valores faltantes y la normalización de variables. A continuación, se desarrollan visualizaciones que permiten comprender la dinámica de la enfermedad y su impacto en la población de CABA. Este análisis exploratorio servirá como base para futuras investigaciones epidemiológicas, ayudando a las autoridades de salud a diseñar estrategias de prevención y control más efectivas."
      ],
      "metadata": {
        "id": "dKjHrZklT8xp"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Preguntas / Hipótesis de interés\n",
        "\n",
        "¿Cómo ha evolucionado la cantidad de casos de dengue a lo largo del tiempo\n",
        "en CABA, con especial atención a las estacionalidades?\n",
        "\n",
        "¿Cuáles son las comunas o barrios más afectados por la incidencia del dengue\n",
        "¿Existen diferencias significativas en la distribución de casos por grupo etario y género?\n",
        "\n",
        "¿Se puede identificar una correlación entre las características demográficas de los pacientes y la severidad de los casos?\n",
        "\n",
        "¿Influyen variables ambientales o socioeconómicas en la distribución y el aumento de casos?\n",
        "# Objetivo del Proyecto\n",
        "El objetivo de este proyecto es desarrollar un modelo predictivo que permita estimar la cantidad de nuevos casos de dengue en CABA a partir de variables epidemiológicas y demográficas clave. El modelo considerará factores como la fecha del diagnóstico, la comuna y el barrio de residencia del paciente, y características como la edad y el género. Esta predicción facilitará la planificación de recursos sanitarios, la identificación temprana de zonas de riesgo y la optimización de campañas de prevención y, en última instancia, ayudará a las autoridades de salud a responder de manera más proactiva y efectiva ante futuros brotes.\n"
      ],
      "metadata": {
        "id": "w6-02veTU5pJ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Visualizaciones y Análisis"
      ],
      "metadata": {
        "id": "XZSudULOX-O1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "drive.mount('/content/drive')\n",
        "# Cargar datos\n",
        "df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/casos_dengue.csv', delimiter=';')\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 224
        },
        "id": "0vwk5nHIRGQp",
        "outputId": "f5b53163-528c-41d0-d5bc-a515a2c60094"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    ano  semana_epidemiologica fecha_inicio_semana_epidemiologica  \\\n",
              "0  2024                     31                          28/7/2024   \n",
              "1  2024                     32                           4/8/2024   \n",
              "2  2024                     33                          11/8/2024   \n",
              "3  2024                     34                          18/8/2024   \n",
              "4  2024                     35                          25/8/2024   \n",
              "\n",
              "  grupo_etario departamento_residencia  n_confirmados  \\\n",
              "0     SIN DATO                SIN DATO              0   \n",
              "1     SIN DATO                SIN DATO              0   \n",
              "2     SIN DATO                SIN DATO              0   \n",
              "3     SIN DATO                SIN DATO              0   \n",
              "4     SIN DATO                SIN DATO              0   \n",
              "\n",
              "  fecha_semana_epidemiologica  \n",
              "0                    2024-W31  \n",
              "1                    2024-W32  \n",
              "2                    2024-W33  \n",
              "3                    2024-W34  \n",
              "4                    2024-W35  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e81ca8b3-adfe-42aa-a7be-703c31df1150\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ano</th>\n",
              "      <th>semana_epidemiologica</th>\n",
              "      <th>fecha_inicio_semana_epidemiologica</th>\n",
              "      <th>grupo_etario</th>\n",
              "      <th>departamento_residencia</th>\n",
              "      <th>n_confirmados</th>\n",
              "      <th>fecha_semana_epidemiologica</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2024</td>\n",
              "      <td>31</td>\n",
              "      <td>28/7/2024</td>\n",
              "      <td>SIN DATO</td>\n",
              "      <td>SIN DATO</td>\n",
              "      <td>0</td>\n",
              "      <td>2024-W31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2024</td>\n",
              "      <td>32</td>\n",
              "      <td>4/8/2024</td>\n",
              "      <td>SIN DATO</td>\n",
              "      <td>SIN DATO</td>\n",
              "      <td>0</td>\n",
              "      <td>2024-W32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2024</td>\n",
              "      <td>33</td>\n",
              "      <td>11/8/2024</td>\n",
              "      <td>SIN DATO</td>\n",
              "      <td>SIN DATO</td>\n",
              "      <td>0</td>\n",
              "      <td>2024-W33</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2024</td>\n",
              "      <td>34</td>\n",
              "      <td>18/8/2024</td>\n",
              "      <td>SIN DATO</td>\n",
              "      <td>SIN DATO</td>\n",
              "      <td>0</td>\n",
              "      <td>2024-W34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2024</td>\n",
              "      <td>35</td>\n",
              "      <td>25/8/2024</td>\n",
              "      <td>SIN DATO</td>\n",
              "      <td>SIN DATO</td>\n",
              "      <td>0</td>\n",
              "      <td>2024-W35</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e81ca8b3-adfe-42aa-a7be-703c31df1150')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e81ca8b3-adfe-42aa-a7be-703c31df1150 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e81ca8b3-adfe-42aa-a7be-703c31df1150');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-3031b20b-b68c-4b27-8ef9-352a08175fbf\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3031b20b-b68c-4b27-8ef9-352a08175fbf')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-3031b20b-b68c-4b27-8ef9-352a08175fbf button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 181,\n  \"fields\": [\n    {\n      \"column\": \"ano\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 2024,\n        \"max\": 2025,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2025,\n          2024\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"semana_epidemiologica\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 1,\n        \"max\": 52,\n        \"num_unique_values\": 52,\n        \"samples\": [\n          50,\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fecha_inicio_semana_epidemiologica\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 52,\n        \"samples\": [\n          \"8/12/2024\",\n          \"11/5/2025\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"grupo_etario\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"30 a 39\",\n          \"SIN DATO\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"departamento_residencia\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"SIN DATO\",\n          \"COMUNA 1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"n_confirmados\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fecha_semana_epidemiologica\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 52,\n        \"samples\": [\n          \"2024-W50\",\n          \"2025-W20\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Valores perdidos\n"
      ],
      "metadata": {
        "id": "64Ltn8JmTU9g"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "sin_dato_por_columna = df.apply(lambda x: x.eq(\"SIN DATO\").sum())\n",
        "print(\"Conteo de valores 'SIN DATO' por columna:\")\n",
        "print(sin_dato_por_columna)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LdSd9ENgTV4g",
        "outputId": "f97c80fd-eb26-46a4-ed67-a5ab9f9ce234"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Conteo de valores 'SIN DATO' por columna:\n",
            "ano                                    0\n",
            "semana_epidemiologica                  0\n",
            "fecha_inicio_semana_epidemiologica     0\n",
            "grupo_etario                          28\n",
            "departamento_residencia               32\n",
            "n_confirmados                          0\n",
            "fecha_semana_epidemiologica            0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Se observa que hay valores faltantes en columnas como grupo_etario,departamento_residencia. Se dejarán o imputarán según necesidad del análisis."
      ],
      "metadata": {
        "id": "7pihz-l-Ylt2"
      }
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "Tg_f-XrXaJoG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "top_departamento = df['departamento_residencia'].value_counts().head(16).index\n",
        "df_top = df[df['departamento_residencia'].isin(top_departamento)]\n",
        "\n",
        "plt.figure(figsize=(20, 9))\n",
        "sns.countplot(data=df_top, x='departamento_residencia', hue='grupo_etario')\n",
        "plt.title('Distribución de casos por Departamento y Grupo Etario')\n",
        "plt.xlabel('Departamento de Residencia')\n",
        "plt.ylabel('Número de Casos Confirmados')\n",
        "plt.xticks(rotation=45, ha='right')\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 884
        },
        "id": "Zt706T7SaYuX",
        "outputId": "9044a9cb-60ff-4cb8-b48b-849604ede282"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2000x900 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}